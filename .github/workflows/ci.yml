on: [push, pull_request]

env:
  CARGO_TERM_COLOR: always

jobs:
  build:
    strategy:
      matrix:
        target:
          - x86_64-unknown-linux-musl
          - aarch64-unknown-linux-musl
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: cache toolchain
        uses: actions/cache@v2
        with:
          key: stable-${{ matrix.target }}
          path: |
            ~/.rustup/settings.toml
            ~/.rustup/toolchains
            ~/.rustup/update-hashes
      - name: cache cargo
        uses: actions/cache@v2
        with:
          key: ${{ matrix.target }}-${{ hashFiles('**/Cargo.lock') }}
          path: |
            ~/.cargo/registry
            ~/.cargo/git
            ~/.cargo/bin
            target
      - name: install toolchain
        uses: actions-rs/toolchain@v1
        with:
          toolchain: stable
          target: ${{ matrix.target }}
          override: true
      - name: build release
        uses: actions-rs/cargo@v1
        env:
          # pass strip to rustc directly until cargo functionality is stable
          # https://github.com/rust-lang/rust/issues/72110
          RUSTFLAGS: -C link-arg=-s
        with:
          use-cross: true
          command: build
          args: --release --target ${{ matrix.target }}
      - name: publish release
        uses: svenstaro/upload-release-action@v2
        if: startsWith(github.ref, 'refs/tags/')
        with:
          repo_token: ${{ secrets.GITHUB_TOKEN }}
          file: target/${{ matrix.target }}/release/gotify-desktop
          asset_name: gotify-desktop-${{ matrix.target }}
          tag: ${{ github.ref }}

  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - run: cargo test --verbose

  clippy:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add clippy
      - uses: actions-rs/cargo@v1
        with:
          command: clippy
          args: -- -D warnings

  fmt:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: actions-rs/toolchain@v1
        with:
          profile: minimal
          toolchain: stable
          override: true
      - run: rustup component add rustfmt
      - uses: actions-rs/cargo@v1
        with:
          command: fmt
          args: --all -- --check
